# SQL注入攻击
## 解释：（英语：SQL injection），也称SQL注入或SQL注码，是发生于应用程序与数据库层的安全漏洞。
## 原因：  
在应用程序中若有下列状况，则可能应用程序正暴露在SQL Injection的高风险情况下：

1. 在应用程序中使用字符串联结方式或联合查询方式组合SQL指令。（在下面的例子中用“OR”联结的语句）；  
2. 在应用程序链接数据库时使用权限过大的账户（例如很多开发人员都喜欢用最高权限的系统管理员账户（如常见的root，sa等）连接数据库）；  
3. 在数据库中开放了不必要但权力过大的功能（例如在Microsoft SQL Server数据库中的xp_cmdshell延伸存储程序或是OLE Automation存储程序等）；  
4. 太过于信任用户所输入的数据，未限制输入的特殊字符，以及未对用户输入的数据做潜在指令的检查。这种威胁多出现在使用拼接符的情况下，可以通过占位符来防止这种威胁。  

## 作用原理   
1. SQL命令可查询、插入、更新、删除等，命令的串接。而以分号字符为不同命令的区别。（原本的作用是用于SubQuery或作为查询、插入、更新、删除……等的条件式）；  
2. SQL命令对于传入的字符串参数是用单引号字符所包起来。（但连续2个单引号字符，在SQL数据库中，则视为字符串中的一个单引号字符）；  
3. SQL命令中，可以注入注解（连续2个减号字符 -- 后的文字为注解，或“/*”与“*/”所包起来的文字为注解）；  
因此，如果在组合SQL的命令字符串时，未针对单引号字符作转义处理的话，将导致该字符变量在填入命令字符串时，被恶意窜改原本的SQL语法的作用。  

## 例子  

正常情况下我想从user库中查询一个用户名为小明的用户的信息，sql语句应为：  
SELECT * FROM user WHERE name=‘小明’ and password = '12345';  
假如我现在并不知道这个数据库中的任何信息，想要获取其内容，则可以输入下列指令：  
SELECT * FROM users WHERE (username = ‘小明’ OR '1'='1')  and (password = '1' OR '1'='1');  
则实际上运行的指令将变成：  
SELECT * FROM users;  
在不知道账号的密码的情况下获取网站的用户信息。